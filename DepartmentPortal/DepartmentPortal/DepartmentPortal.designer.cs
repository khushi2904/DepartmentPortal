#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DepartmentPortal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DepartmentPortal")]
	public partial class DepartmentPortalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDailyTT(DailyTT instance);
    partial void UpdateDailyTT(DailyTT instance);
    partial void DeleteDailyTT(DailyTT instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertExternalMark(ExternalMark instance);
    partial void UpdateExternalMark(ExternalMark instance);
    partial void DeleteExternalMark(ExternalMark instance);
    partial void InsertFaculty(Faculty instance);
    partial void UpdateFaculty(Faculty instance);
    partial void DeleteFaculty(Faculty instance);
    partial void InsertInternalMark(InternalMark instance);
    partial void UpdateInternalMark(InternalMark instance);
    partial void DeleteInternalMark(InternalMark instance);
    partial void Insertlab_tt(lab_tt instance);
    partial void Updatelab_tt(lab_tt instance);
    partial void Deletelab_tt(lab_tt instance);
    partial void InsertlecTT(lecTT instance);
    partial void UpdatelecTT(lecTT instance);
    partial void DeletelecTT(lecTT instance);
    partial void InsertSemester(Semester instance);
    partial void UpdateSemester(Semester instance);
    partial void DeleteSemester(Semester instance);
    partial void Insertsession(session instance);
    partial void Updatesession(session instance);
    partial void Deletesession(session instance);
    partial void Insertskipped(skipped instance);
    partial void Updateskipped(skipped instance);
    partial void Deleteskipped(skipped instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void Insertsubject(subject instance);
    partial void Updatesubject(subject instance);
    partial void Deletesubject(subject instance);
    #endregion
		
		public DepartmentPortalDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DepartmentPortalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DepartmentPortalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DepartmentPortalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DepartmentPortalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DepartmentPortalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DailyTT> DailyTTs
		{
			get
			{
				return this.GetTable<DailyTT>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<ExternalMark> ExternalMarks
		{
			get
			{
				return this.GetTable<ExternalMark>();
			}
		}
		
		public System.Data.Linq.Table<Faculty> Faculties
		{
			get
			{
				return this.GetTable<Faculty>();
			}
		}
		
		public System.Data.Linq.Table<InternalMark> InternalMarks
		{
			get
			{
				return this.GetTable<InternalMark>();
			}
		}
		
		public System.Data.Linq.Table<lab_tt> lab_tts
		{
			get
			{
				return this.GetTable<lab_tt>();
			}
		}
		
		public System.Data.Linq.Table<lecTT> lecTTs
		{
			get
			{
				return this.GetTable<lecTT>();
			}
		}
		
		public System.Data.Linq.Table<Semester> Semesters
		{
			get
			{
				return this.GetTable<Semester>();
			}
		}
		
		public System.Data.Linq.Table<session> sessions
		{
			get
			{
				return this.GetTable<session>();
			}
		}
		
		public System.Data.Linq.Table<skipped> skippeds
		{
			get
			{
				return this.GetTable<skipped>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<subject> subjects
		{
			get
			{
				return this.GetTable<subject>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailyTT")]
	public partial class DailyTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tt_Id;
		
		private System.Nullable<int> _sem;
		
		private string _branch;
		
		private string _division;
		
		private string _s1_dur;
		
		private string _s2_dur;
		
		private string _s3_dur;
		
		private string _s4_dur;
		
		private string _s5_dur;
		
		private string _s6_dur;
		
		private string _s7_dur;
		
		private string _s1_type;
		
		private string _s2_type;
		
		private string _s3_type;
		
		private string _s4_type;
		
		private string _s5_type;
		
		private string _s6_type;
		
		private string _s7_type;
		
		private EntitySet<lab_tt> _lab_tts;
		
		private EntitySet<lecTT> _lecTTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontt_IdChanging(int value);
    partial void Ontt_IdChanged();
    partial void OnsemChanging(System.Nullable<int> value);
    partial void OnsemChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void OndivisionChanging(string value);
    partial void OndivisionChanged();
    partial void Ons1_durChanging(string value);
    partial void Ons1_durChanged();
    partial void Ons2_durChanging(string value);
    partial void Ons2_durChanged();
    partial void Ons3_durChanging(string value);
    partial void Ons3_durChanged();
    partial void Ons4_durChanging(string value);
    partial void Ons4_durChanged();
    partial void Ons5_durChanging(string value);
    partial void Ons5_durChanged();
    partial void Ons6_durChanging(string value);
    partial void Ons6_durChanged();
    partial void Ons7_durChanging(string value);
    partial void Ons7_durChanged();
    partial void Ons1_typeChanging(string value);
    partial void Ons1_typeChanged();
    partial void Ons2_typeChanging(string value);
    partial void Ons2_typeChanged();
    partial void Ons3_typeChanging(string value);
    partial void Ons3_typeChanged();
    partial void Ons4_typeChanging(string value);
    partial void Ons4_typeChanged();
    partial void Ons5_typeChanging(string value);
    partial void Ons5_typeChanged();
    partial void Ons6_typeChanging(string value);
    partial void Ons6_typeChanged();
    partial void Ons7_typeChanging(string value);
    partial void Ons7_typeChanged();
    #endregion
		
		public DailyTT()
		{
			this._lab_tts = new EntitySet<lab_tt>(new Action<lab_tt>(this.attach_lab_tts), new Action<lab_tt>(this.detach_lab_tts));
			this._lecTTs = new EntitySet<lecTT>(new Action<lecTT>(this.attach_lecTTs), new Action<lecTT>(this.detach_lecTTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tt_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tt_Id
		{
			get
			{
				return this._tt_Id;
			}
			set
			{
				if ((this._tt_Id != value))
				{
					this.Ontt_IdChanging(value);
					this.SendPropertyChanging();
					this._tt_Id = value;
					this.SendPropertyChanged("tt_Id");
					this.Ontt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem", DbType="Int")]
		public System.Nullable<int> sem
		{
			get
			{
				return this._sem;
			}
			set
			{
				if ((this._sem != value))
				{
					this.OnsemChanging(value);
					this.SendPropertyChanging();
					this._sem = value;
					this.SendPropertyChanged("sem");
					this.OnsemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="NChar(2)")]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_division", DbType="NChar(10)")]
		public string division
		{
			get
			{
				return this._division;
			}
			set
			{
				if ((this._division != value))
				{
					this.OndivisionChanging(value);
					this.SendPropertyChanging();
					this._division = value;
					this.SendPropertyChanged("division");
					this.OndivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s1_dur", DbType="VarChar(50)")]
		public string s1_dur
		{
			get
			{
				return this._s1_dur;
			}
			set
			{
				if ((this._s1_dur != value))
				{
					this.Ons1_durChanging(value);
					this.SendPropertyChanging();
					this._s1_dur = value;
					this.SendPropertyChanged("s1_dur");
					this.Ons1_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s2_dur", DbType="VarChar(50)")]
		public string s2_dur
		{
			get
			{
				return this._s2_dur;
			}
			set
			{
				if ((this._s2_dur != value))
				{
					this.Ons2_durChanging(value);
					this.SendPropertyChanging();
					this._s2_dur = value;
					this.SendPropertyChanged("s2_dur");
					this.Ons2_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s3_dur", DbType="VarChar(50)")]
		public string s3_dur
		{
			get
			{
				return this._s3_dur;
			}
			set
			{
				if ((this._s3_dur != value))
				{
					this.Ons3_durChanging(value);
					this.SendPropertyChanging();
					this._s3_dur = value;
					this.SendPropertyChanged("s3_dur");
					this.Ons3_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s4_dur", DbType="VarChar(50)")]
		public string s4_dur
		{
			get
			{
				return this._s4_dur;
			}
			set
			{
				if ((this._s4_dur != value))
				{
					this.Ons4_durChanging(value);
					this.SendPropertyChanging();
					this._s4_dur = value;
					this.SendPropertyChanged("s4_dur");
					this.Ons4_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s5_dur", DbType="VarChar(50)")]
		public string s5_dur
		{
			get
			{
				return this._s5_dur;
			}
			set
			{
				if ((this._s5_dur != value))
				{
					this.Ons5_durChanging(value);
					this.SendPropertyChanging();
					this._s5_dur = value;
					this.SendPropertyChanged("s5_dur");
					this.Ons5_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s6_dur", DbType="VarChar(50)")]
		public string s6_dur
		{
			get
			{
				return this._s6_dur;
			}
			set
			{
				if ((this._s6_dur != value))
				{
					this.Ons6_durChanging(value);
					this.SendPropertyChanging();
					this._s6_dur = value;
					this.SendPropertyChanged("s6_dur");
					this.Ons6_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s7_dur", DbType="VarChar(50)")]
		public string s7_dur
		{
			get
			{
				return this._s7_dur;
			}
			set
			{
				if ((this._s7_dur != value))
				{
					this.Ons7_durChanging(value);
					this.SendPropertyChanging();
					this._s7_dur = value;
					this.SendPropertyChanged("s7_dur");
					this.Ons7_durChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s1_type", DbType="NChar(10)")]
		public string s1_type
		{
			get
			{
				return this._s1_type;
			}
			set
			{
				if ((this._s1_type != value))
				{
					this.Ons1_typeChanging(value);
					this.SendPropertyChanging();
					this._s1_type = value;
					this.SendPropertyChanged("s1_type");
					this.Ons1_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s2_type", DbType="NChar(10)")]
		public string s2_type
		{
			get
			{
				return this._s2_type;
			}
			set
			{
				if ((this._s2_type != value))
				{
					this.Ons2_typeChanging(value);
					this.SendPropertyChanging();
					this._s2_type = value;
					this.SendPropertyChanged("s2_type");
					this.Ons2_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s3_type", DbType="NChar(10)")]
		public string s3_type
		{
			get
			{
				return this._s3_type;
			}
			set
			{
				if ((this._s3_type != value))
				{
					this.Ons3_typeChanging(value);
					this.SendPropertyChanging();
					this._s3_type = value;
					this.SendPropertyChanged("s3_type");
					this.Ons3_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s4_type", DbType="NChar(10)")]
		public string s4_type
		{
			get
			{
				return this._s4_type;
			}
			set
			{
				if ((this._s4_type != value))
				{
					this.Ons4_typeChanging(value);
					this.SendPropertyChanging();
					this._s4_type = value;
					this.SendPropertyChanged("s4_type");
					this.Ons4_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s5_type", DbType="NChar(10)")]
		public string s5_type
		{
			get
			{
				return this._s5_type;
			}
			set
			{
				if ((this._s5_type != value))
				{
					this.Ons5_typeChanging(value);
					this.SendPropertyChanging();
					this._s5_type = value;
					this.SendPropertyChanged("s5_type");
					this.Ons5_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s6_type", DbType="NChar(10)")]
		public string s6_type
		{
			get
			{
				return this._s6_type;
			}
			set
			{
				if ((this._s6_type != value))
				{
					this.Ons6_typeChanging(value);
					this.SendPropertyChanging();
					this._s6_type = value;
					this.SendPropertyChanged("s6_type");
					this.Ons6_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s7_type", DbType="NChar(10)")]
		public string s7_type
		{
			get
			{
				return this._s7_type;
			}
			set
			{
				if ((this._s7_type != value))
				{
					this.Ons7_typeChanging(value);
					this.SendPropertyChanging();
					this._s7_type = value;
					this.SendPropertyChanged("s7_type");
					this.Ons7_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DailyTT_lab_tt", Storage="_lab_tts", ThisKey="tt_Id", OtherKey="tt_id")]
		public EntitySet<lab_tt> lab_tts
		{
			get
			{
				return this._lab_tts;
			}
			set
			{
				this._lab_tts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DailyTT_lecTT", Storage="_lecTTs", ThisKey="tt_Id", OtherKey="tt_id")]
		public EntitySet<lecTT> lecTTs
		{
			get
			{
				return this._lecTTs;
			}
			set
			{
				this._lecTTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_lab_tts(lab_tt entity)
		{
			this.SendPropertyChanging();
			entity.DailyTT = this;
		}
		
		private void detach_lab_tts(lab_tt entity)
		{
			this.SendPropertyChanging();
			entity.DailyTT = null;
		}
		
		private void attach_lecTTs(lecTT entity)
		{
			this.SendPropertyChanging();
			entity.DailyTT = this;
		}
		
		private void detach_lecTTs(lecTT entity)
		{
			this.SendPropertyChanging();
			entity.DailyTT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _event_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _name;
		
		private string _description;
		
		private string _branch;
		
		private System.Nullable<int> _sem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onevent_idChanging(int value);
    partial void Onevent_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void OnsemChanging(System.Nullable<int> value);
    partial void OnsemChanged();
    #endregion
		
		public Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int event_id
		{
			get
			{
				return this._event_id;
			}
			set
			{
				if ((this._event_id != value))
				{
					this.Onevent_idChanging(value);
					this.SendPropertyChanging();
					this._event_id = value;
					this.SendPropertyChanged("event_id");
					this.Onevent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(50)")]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem", DbType="Int")]
		public System.Nullable<int> sem
		{
			get
			{
				return this._sem;
			}
			set
			{
				if ((this._sem != value))
				{
					this.OnsemChanging(value);
					this.SendPropertyChanging();
					this._sem = value;
					this.SendPropertyChanged("sem");
					this.OnsemChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalMarks")]
	public partial class ExternalMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _marks_id;
		
		private System.Nullable<int> _sem_id;
		
		private System.Nullable<int> _subject_id;
		
		private System.Nullable<int> _marks;
		
		private System.Nullable<int> _pract_marks;
		
		private System.Nullable<int> _rem_1;
		
		private string _rem_2;
		
		private string _grade;
		
		private System.Nullable<char> _status;
		
		private EntityRef<Semester> _Semester;
		
		private EntityRef<subject> _subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmarks_idChanging(int value);
    partial void Onmarks_idChanged();
    partial void Onsem_idChanging(System.Nullable<int> value);
    partial void Onsem_idChanged();
    partial void Onsubject_idChanging(System.Nullable<int> value);
    partial void Onsubject_idChanged();
    partial void OnmarksChanging(System.Nullable<int> value);
    partial void OnmarksChanged();
    partial void Onpract_marksChanging(System.Nullable<int> value);
    partial void Onpract_marksChanged();
    partial void Onrem_1Changing(System.Nullable<int> value);
    partial void Onrem_1Changed();
    partial void Onrem_2Changing(string value);
    partial void Onrem_2Changed();
    partial void OngradeChanging(string value);
    partial void OngradeChanged();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    #endregion
		
		public ExternalMark()
		{
			this._Semester = default(EntityRef<Semester>);
			this._subject = default(EntityRef<subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marks_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int marks_id
		{
			get
			{
				return this._marks_id;
			}
			set
			{
				if ((this._marks_id != value))
				{
					this.Onmarks_idChanging(value);
					this.SendPropertyChanging();
					this._marks_id = value;
					this.SendPropertyChanged("marks_id");
					this.Onmarks_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem_id", DbType="Int")]
		public System.Nullable<int> sem_id
		{
			get
			{
				return this._sem_id;
			}
			set
			{
				if ((this._sem_id != value))
				{
					if (this._Semester.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsem_idChanging(value);
					this.SendPropertyChanging();
					this._sem_id = value;
					this.SendPropertyChanged("sem_id");
					this.Onsem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_id", DbType="Int")]
		public System.Nullable<int> subject_id
		{
			get
			{
				return this._subject_id;
			}
			set
			{
				if ((this._subject_id != value))
				{
					if (this._subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsubject_idChanging(value);
					this.SendPropertyChanging();
					this._subject_id = value;
					this.SendPropertyChanged("subject_id");
					this.Onsubject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marks", DbType="Int")]
		public System.Nullable<int> marks
		{
			get
			{
				return this._marks;
			}
			set
			{
				if ((this._marks != value))
				{
					this.OnmarksChanging(value);
					this.SendPropertyChanging();
					this._marks = value;
					this.SendPropertyChanged("marks");
					this.OnmarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pract_marks", DbType="Int")]
		public System.Nullable<int> pract_marks
		{
			get
			{
				return this._pract_marks;
			}
			set
			{
				if ((this._pract_marks != value))
				{
					this.Onpract_marksChanging(value);
					this.SendPropertyChanging();
					this._pract_marks = value;
					this.SendPropertyChanged("pract_marks");
					this.Onpract_marksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rem_1", DbType="Int")]
		public System.Nullable<int> rem_1
		{
			get
			{
				return this._rem_1;
			}
			set
			{
				if ((this._rem_1 != value))
				{
					this.Onrem_1Changing(value);
					this.SendPropertyChanging();
					this._rem_1 = value;
					this.SendPropertyChanged("rem_1");
					this.Onrem_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rem_2", DbType="NChar(10)")]
		public string rem_2
		{
			get
			{
				return this._rem_2;
			}
			set
			{
				if ((this._rem_2 != value))
				{
					this.Onrem_2Changing(value);
					this.SendPropertyChanging();
					this._rem_2 = value;
					this.SendPropertyChanged("rem_2");
					this.Onrem_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="NChar(2)")]
		public string grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_ExternalMark", Storage="_Semester", ThisKey="sem_id", OtherKey="sem_id", IsForeignKey=true)]
		public Semester Semester
		{
			get
			{
				return this._Semester.Entity;
			}
			set
			{
				Semester previousValue = this._Semester.Entity;
				if (((previousValue != value) 
							|| (this._Semester.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Semester.Entity = null;
						previousValue.ExternalMarks.Remove(this);
					}
					this._Semester.Entity = value;
					if ((value != null))
					{
						value.ExternalMarks.Add(this);
						this._sem_id = value.sem_id;
					}
					else
					{
						this._sem_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Semester");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_ExternalMark", Storage="_subject", ThisKey="subject_id", OtherKey="subject_id", IsForeignKey=true)]
		public subject subject
		{
			get
			{
				return this._subject.Entity;
			}
			set
			{
				subject previousValue = this._subject.Entity;
				if (((previousValue != value) 
							|| (this._subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._subject.Entity = null;
						previousValue.ExternalMarks.Remove(this);
					}
					this._subject.Entity = value;
					if ((value != null))
					{
						value.ExternalMarks.Add(this);
						this._subject_id = value.subject_id;
					}
					else
					{
						this._subject_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty")]
	public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _faculty_id;
		
		private string _password;
		
		private string _faculty_name;
		
		private System.Nullable<char> _user_type;
		
		private string _branch;
		
		private string _Designation;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private string _email_id;
		
		private System.Nullable<decimal> _contact_no;
		
		private string _add1;
		
		private string _add2;
		
		private string _city;
		
		private string _state;
		
		private System.Nullable<decimal> _pincode;
		
		private string _sec_ques_1;
		
		private string _sec_ans_1;
		
		private string _sec_ques_2;
		
		private string _sec_ans_2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfaculty_idChanging(string value);
    partial void Onfaculty_idChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onfaculty_nameChanging(string value);
    partial void Onfaculty_nameChanged();
    partial void Onuser_typeChanging(System.Nullable<char> value);
    partial void Onuser_typeChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void Onemail_idChanging(string value);
    partial void Onemail_idChanged();
    partial void Oncontact_noChanging(System.Nullable<decimal> value);
    partial void Oncontact_noChanged();
    partial void Onadd1Changing(string value);
    partial void Onadd1Changed();
    partial void Onadd2Changing(string value);
    partial void Onadd2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnpincodeChanging(System.Nullable<decimal> value);
    partial void OnpincodeChanged();
    partial void Onsec_ques_1Changing(string value);
    partial void Onsec_ques_1Changed();
    partial void Onsec_ans_1Changing(string value);
    partial void Onsec_ans_1Changed();
    partial void Onsec_ques_2Changing(string value);
    partial void Onsec_ques_2Changed();
    partial void Onsec_ans_2Changing(string value);
    partial void Onsec_ans_2Changed();
    #endregion
		
		public Faculty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faculty_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string faculty_id
		{
			get
			{
				return this._faculty_id;
			}
			set
			{
				if ((this._faculty_id != value))
				{
					this.Onfaculty_idChanging(value);
					this.SendPropertyChanging();
					this._faculty_id = value;
					this.SendPropertyChanged("faculty_id");
					this.Onfaculty_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faculty_name", DbType="VarChar(80)")]
		public string faculty_name
		{
			get
			{
				return this._faculty_name;
			}
			set
			{
				if ((this._faculty_name != value))
				{
					this.Onfaculty_nameChanging(value);
					this.SendPropertyChanging();
					this._faculty_name = value;
					this.SendPropertyChanged("faculty_name");
					this.Onfaculty_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_type", DbType="Char(1)")]
		public System.Nullable<char> user_type
		{
			get
			{
				return this._user_type;
			}
			set
			{
				if ((this._user_type != value))
				{
					this.Onuser_typeChanging(value);
					this.SendPropertyChanging();
					this._user_type = value;
					this.SendPropertyChanged("user_type");
					this.Onuser_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="NChar(2)")]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_id", DbType="VarChar(50)")]
		public string email_id
		{
			get
			{
				return this._email_id;
			}
			set
			{
				if ((this._email_id != value))
				{
					this.Onemail_idChanging(value);
					this.SendPropertyChanging();
					this._email_id = value;
					this.SendPropertyChanged("email_id");
					this.Onemail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add1", DbType="VarChar(50)")]
		public string add1
		{
			get
			{
				return this._add1;
			}
			set
			{
				if ((this._add1 != value))
				{
					this.Onadd1Changing(value);
					this.SendPropertyChanging();
					this._add1 = value;
					this.SendPropertyChanged("add1");
					this.Onadd1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add2", DbType="VarChar(50)")]
		public string add2
		{
			get
			{
				return this._add2;
			}
			set
			{
				if ((this._add2 != value))
				{
					this.Onadd2Changing(value);
					this.SendPropertyChanging();
					this._add2 = value;
					this.SendPropertyChanged("add2");
					this.Onadd2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pincode", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> pincode
		{
			get
			{
				return this._pincode;
			}
			set
			{
				if ((this._pincode != value))
				{
					this.OnpincodeChanging(value);
					this.SendPropertyChanging();
					this._pincode = value;
					this.SendPropertyChanged("pincode");
					this.OnpincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ques_1", DbType="VarChar(100)")]
		public string sec_ques_1
		{
			get
			{
				return this._sec_ques_1;
			}
			set
			{
				if ((this._sec_ques_1 != value))
				{
					this.Onsec_ques_1Changing(value);
					this.SendPropertyChanging();
					this._sec_ques_1 = value;
					this.SendPropertyChanged("sec_ques_1");
					this.Onsec_ques_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ans_1", DbType="VarChar(100)")]
		public string sec_ans_1
		{
			get
			{
				return this._sec_ans_1;
			}
			set
			{
				if ((this._sec_ans_1 != value))
				{
					this.Onsec_ans_1Changing(value);
					this.SendPropertyChanging();
					this._sec_ans_1 = value;
					this.SendPropertyChanged("sec_ans_1");
					this.Onsec_ans_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ques_2", DbType="VarChar(100)")]
		public string sec_ques_2
		{
			get
			{
				return this._sec_ques_2;
			}
			set
			{
				if ((this._sec_ques_2 != value))
				{
					this.Onsec_ques_2Changing(value);
					this.SendPropertyChanging();
					this._sec_ques_2 = value;
					this.SendPropertyChanged("sec_ques_2");
					this.Onsec_ques_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ans_2", DbType="VarChar(100)")]
		public string sec_ans_2
		{
			get
			{
				return this._sec_ans_2;
			}
			set
			{
				if ((this._sec_ans_2 != value))
				{
					this.Onsec_ans_2Changing(value);
					this.SendPropertyChanging();
					this._sec_ans_2 = value;
					this.SendPropertyChanged("sec_ans_2");
					this.Onsec_ans_2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InternalMarks")]
	public partial class InternalMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _marks_id;
		
		private System.Nullable<int> _subject_id;
		
		private System.Nullable<int> _session_id;
		
		private System.Nullable<int> _marks;
		
		private EntityRef<session> _session;
		
		private EntityRef<subject> _subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmarks_idChanging(int value);
    partial void Onmarks_idChanged();
    partial void Onsubject_idChanging(System.Nullable<int> value);
    partial void Onsubject_idChanged();
    partial void Onsession_idChanging(System.Nullable<int> value);
    partial void Onsession_idChanged();
    partial void OnmarksChanging(System.Nullable<int> value);
    partial void OnmarksChanged();
    #endregion
		
		public InternalMark()
		{
			this._session = default(EntityRef<session>);
			this._subject = default(EntityRef<subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marks_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int marks_id
		{
			get
			{
				return this._marks_id;
			}
			set
			{
				if ((this._marks_id != value))
				{
					this.Onmarks_idChanging(value);
					this.SendPropertyChanging();
					this._marks_id = value;
					this.SendPropertyChanged("marks_id");
					this.Onmarks_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_id", DbType="Int")]
		public System.Nullable<int> subject_id
		{
			get
			{
				return this._subject_id;
			}
			set
			{
				if ((this._subject_id != value))
				{
					if (this._subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsubject_idChanging(value);
					this.SendPropertyChanging();
					this._subject_id = value;
					this.SendPropertyChanged("subject_id");
					this.Onsubject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", DbType="Int")]
		public System.Nullable<int> session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					if (this._session.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marks", DbType="Int")]
		public System.Nullable<int> marks
		{
			get
			{
				return this._marks;
			}
			set
			{
				if ((this._marks != value))
				{
					this.OnmarksChanging(value);
					this.SendPropertyChanging();
					this._marks = value;
					this.SendPropertyChanged("marks");
					this.OnmarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="session_InternalMark", Storage="_session", ThisKey="session_id", OtherKey="session_id", IsForeignKey=true)]
		public session session
		{
			get
			{
				return this._session.Entity;
			}
			set
			{
				session previousValue = this._session.Entity;
				if (((previousValue != value) 
							|| (this._session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._session.Entity = null;
						previousValue.InternalMarks.Remove(this);
					}
					this._session.Entity = value;
					if ((value != null))
					{
						value.InternalMarks.Add(this);
						this._session_id = value.session_id;
					}
					else
					{
						this._session_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("session");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_InternalMark", Storage="_subject", ThisKey="subject_id", OtherKey="subject_id", IsForeignKey=true)]
		public subject subject
		{
			get
			{
				return this._subject.Entity;
			}
			set
			{
				subject previousValue = this._subject.Entity;
				if (((previousValue != value) 
							|| (this._subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._subject.Entity = null;
						previousValue.InternalMarks.Remove(this);
					}
					this._subject.Entity = value;
					if ((value != null))
					{
						value.InternalMarks.Add(this);
						this._subject_id = value.subject_id;
					}
					else
					{
						this._subject_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lab_tt")]
	public partial class lab_tt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _tt_id;
		
		private string _day;
		
		private string _s1;
		
		private string _f1;
		
		private string _b1;
		
		private EntityRef<DailyTT> _DailyTT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Ontt_idChanging(System.Nullable<int> value);
    partial void Ontt_idChanged();
    partial void OndayChanging(string value);
    partial void OndayChanged();
    partial void Ons1Changing(string value);
    partial void Ons1Changed();
    partial void Onf1Changing(string value);
    partial void Onf1Changed();
    partial void Onb1Changing(string value);
    partial void Onb1Changed();
    #endregion
		
		public lab_tt()
		{
			this._DailyTT = default(EntityRef<DailyTT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tt_id", DbType="Int")]
		public System.Nullable<int> tt_id
		{
			get
			{
				return this._tt_id;
			}
			set
			{
				if ((this._tt_id != value))
				{
					if (this._DailyTT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontt_idChanging(value);
					this.SendPropertyChanging();
					this._tt_id = value;
					this.SendPropertyChanged("tt_id");
					this.Ontt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="NChar(10)")]
		public string day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s1", DbType="NChar(10)")]
		public string s1
		{
			get
			{
				return this._s1;
			}
			set
			{
				if ((this._s1 != value))
				{
					this.Ons1Changing(value);
					this.SendPropertyChanging();
					this._s1 = value;
					this.SendPropertyChanged("s1");
					this.Ons1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f1", DbType="NChar(10)")]
		public string f1
		{
			get
			{
				return this._f1;
			}
			set
			{
				if ((this._f1 != value))
				{
					this.Onf1Changing(value);
					this.SendPropertyChanging();
					this._f1 = value;
					this.SendPropertyChanged("f1");
					this.Onf1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b1", DbType="NChar(10)")]
		public string b1
		{
			get
			{
				return this._b1;
			}
			set
			{
				if ((this._b1 != value))
				{
					this.Onb1Changing(value);
					this.SendPropertyChanging();
					this._b1 = value;
					this.SendPropertyChanged("b1");
					this.Onb1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DailyTT_lab_tt", Storage="_DailyTT", ThisKey="tt_id", OtherKey="tt_Id", IsForeignKey=true)]
		public DailyTT DailyTT
		{
			get
			{
				return this._DailyTT.Entity;
			}
			set
			{
				DailyTT previousValue = this._DailyTT.Entity;
				if (((previousValue != value) 
							|| (this._DailyTT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DailyTT.Entity = null;
						previousValue.lab_tts.Remove(this);
					}
					this._DailyTT.Entity = value;
					if ((value != null))
					{
						value.lab_tts.Add(this);
						this._tt_id = value.tt_Id;
					}
					else
					{
						this._tt_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DailyTT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lecTT")]
	public partial class lecTT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _tt_id;
		
		private string _day;
		
		private string _s1;
		
		private string _s2;
		
		private string _s3;
		
		private string _s4;
		
		private string _s5;
		
		private string _s6;
		
		private string _s7;
		
		private string _f1;
		
		private string _f2;
		
		private string _f3;
		
		private string _f4;
		
		private string _f5;
		
		private string _f6;
		
		private string _f7;
		
		private EntityRef<DailyTT> _DailyTT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Ontt_idChanging(System.Nullable<int> value);
    partial void Ontt_idChanged();
    partial void OndayChanging(string value);
    partial void OndayChanged();
    partial void Ons1Changing(string value);
    partial void Ons1Changed();
    partial void Ons2Changing(string value);
    partial void Ons2Changed();
    partial void Ons3Changing(string value);
    partial void Ons3Changed();
    partial void Ons4Changing(string value);
    partial void Ons4Changed();
    partial void Ons5Changing(string value);
    partial void Ons5Changed();
    partial void Ons6Changing(string value);
    partial void Ons6Changed();
    partial void Ons7Changing(string value);
    partial void Ons7Changed();
    partial void Onf1Changing(string value);
    partial void Onf1Changed();
    partial void Onf2Changing(string value);
    partial void Onf2Changed();
    partial void Onf3Changing(string value);
    partial void Onf3Changed();
    partial void Onf4Changing(string value);
    partial void Onf4Changed();
    partial void Onf5Changing(string value);
    partial void Onf5Changed();
    partial void Onf6Changing(string value);
    partial void Onf6Changed();
    partial void Onf7Changing(string value);
    partial void Onf7Changed();
    #endregion
		
		public lecTT()
		{
			this._DailyTT = default(EntityRef<DailyTT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tt_id", DbType="Int")]
		public System.Nullable<int> tt_id
		{
			get
			{
				return this._tt_id;
			}
			set
			{
				if ((this._tt_id != value))
				{
					if (this._DailyTT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontt_idChanging(value);
					this.SendPropertyChanging();
					this._tt_id = value;
					this.SendPropertyChanged("tt_id");
					this.Ontt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="NChar(10)")]
		public string day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s1", DbType="NChar(30)")]
		public string s1
		{
			get
			{
				return this._s1;
			}
			set
			{
				if ((this._s1 != value))
				{
					this.Ons1Changing(value);
					this.SendPropertyChanging();
					this._s1 = value;
					this.SendPropertyChanged("s1");
					this.Ons1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s2", DbType="NChar(30)")]
		public string s2
		{
			get
			{
				return this._s2;
			}
			set
			{
				if ((this._s2 != value))
				{
					this.Ons2Changing(value);
					this.SendPropertyChanging();
					this._s2 = value;
					this.SendPropertyChanged("s2");
					this.Ons2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s3", DbType="NChar(30)")]
		public string s3
		{
			get
			{
				return this._s3;
			}
			set
			{
				if ((this._s3 != value))
				{
					this.Ons3Changing(value);
					this.SendPropertyChanging();
					this._s3 = value;
					this.SendPropertyChanged("s3");
					this.Ons3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s4", DbType="NChar(30)")]
		public string s4
		{
			get
			{
				return this._s4;
			}
			set
			{
				if ((this._s4 != value))
				{
					this.Ons4Changing(value);
					this.SendPropertyChanging();
					this._s4 = value;
					this.SendPropertyChanged("s4");
					this.Ons4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s5", DbType="NChar(30)")]
		public string s5
		{
			get
			{
				return this._s5;
			}
			set
			{
				if ((this._s5 != value))
				{
					this.Ons5Changing(value);
					this.SendPropertyChanging();
					this._s5 = value;
					this.SendPropertyChanged("s5");
					this.Ons5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s6", DbType="NChar(30)")]
		public string s6
		{
			get
			{
				return this._s6;
			}
			set
			{
				if ((this._s6 != value))
				{
					this.Ons6Changing(value);
					this.SendPropertyChanging();
					this._s6 = value;
					this.SendPropertyChanged("s6");
					this.Ons6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s7", DbType="NChar(30)")]
		public string s7
		{
			get
			{
				return this._s7;
			}
			set
			{
				if ((this._s7 != value))
				{
					this.Ons7Changing(value);
					this.SendPropertyChanging();
					this._s7 = value;
					this.SendPropertyChanged("s7");
					this.Ons7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f1", DbType="NChar(20)")]
		public string f1
		{
			get
			{
				return this._f1;
			}
			set
			{
				if ((this._f1 != value))
				{
					this.Onf1Changing(value);
					this.SendPropertyChanging();
					this._f1 = value;
					this.SendPropertyChanged("f1");
					this.Onf1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f2", DbType="NChar(20)")]
		public string f2
		{
			get
			{
				return this._f2;
			}
			set
			{
				if ((this._f2 != value))
				{
					this.Onf2Changing(value);
					this.SendPropertyChanging();
					this._f2 = value;
					this.SendPropertyChanged("f2");
					this.Onf2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f3", DbType="NChar(20)")]
		public string f3
		{
			get
			{
				return this._f3;
			}
			set
			{
				if ((this._f3 != value))
				{
					this.Onf3Changing(value);
					this.SendPropertyChanging();
					this._f3 = value;
					this.SendPropertyChanged("f3");
					this.Onf3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f4", DbType="NChar(20)")]
		public string f4
		{
			get
			{
				return this._f4;
			}
			set
			{
				if ((this._f4 != value))
				{
					this.Onf4Changing(value);
					this.SendPropertyChanging();
					this._f4 = value;
					this.SendPropertyChanged("f4");
					this.Onf4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f5", DbType="NChar(20)")]
		public string f5
		{
			get
			{
				return this._f5;
			}
			set
			{
				if ((this._f5 != value))
				{
					this.Onf5Changing(value);
					this.SendPropertyChanging();
					this._f5 = value;
					this.SendPropertyChanged("f5");
					this.Onf5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f6", DbType="NChar(20)")]
		public string f6
		{
			get
			{
				return this._f6;
			}
			set
			{
				if ((this._f6 != value))
				{
					this.Onf6Changing(value);
					this.SendPropertyChanging();
					this._f6 = value;
					this.SendPropertyChanged("f6");
					this.Onf6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f7", DbType="NChar(20)")]
		public string f7
		{
			get
			{
				return this._f7;
			}
			set
			{
				if ((this._f7 != value))
				{
					this.Onf7Changing(value);
					this.SendPropertyChanging();
					this._f7 = value;
					this.SendPropertyChanged("f7");
					this.Onf7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DailyTT_lecTT", Storage="_DailyTT", ThisKey="tt_id", OtherKey="tt_Id", IsForeignKey=true)]
		public DailyTT DailyTT
		{
			get
			{
				return this._DailyTT.Entity;
			}
			set
			{
				DailyTT previousValue = this._DailyTT.Entity;
				if (((previousValue != value) 
							|| (this._DailyTT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DailyTT.Entity = null;
						previousValue.lecTTs.Remove(this);
					}
					this._DailyTT.Entity = value;
					if ((value != null))
					{
						value.lecTTs.Add(this);
						this._tt_id = value.tt_Id;
					}
					else
					{
						this._tt_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DailyTT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Semester")]
	public partial class Semester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sem_id;
		
		private string _student_id;
		
		private System.Nullable<int> _sem;
		
		private System.Nullable<int> _roll_no;
		
		private System.Nullable<int> _attempt;
		
		private string _division;
		
		private string _batch;
		
		private EntitySet<ExternalMark> _ExternalMarks;
		
		private EntitySet<session> _sessions;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsem_idChanging(int value);
    partial void Onsem_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void OnsemChanging(System.Nullable<int> value);
    partial void OnsemChanged();
    partial void Onroll_noChanging(System.Nullable<int> value);
    partial void Onroll_noChanged();
    partial void OnattemptChanging(System.Nullable<int> value);
    partial void OnattemptChanged();
    partial void OndivisionChanging(string value);
    partial void OndivisionChanged();
    partial void OnbatchChanging(string value);
    partial void OnbatchChanged();
    #endregion
		
		public Semester()
		{
			this._ExternalMarks = new EntitySet<ExternalMark>(new Action<ExternalMark>(this.attach_ExternalMarks), new Action<ExternalMark>(this.detach_ExternalMarks));
			this._sessions = new EntitySet<session>(new Action<session>(this.attach_sessions), new Action<session>(this.detach_sessions));
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sem_id
		{
			get
			{
				return this._sem_id;
			}
			set
			{
				if ((this._sem_id != value))
				{
					this.Onsem_idChanging(value);
					this.SendPropertyChanging();
					this._sem_id = value;
					this.SendPropertyChanged("sem_id");
					this.Onsem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10)")]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem", DbType="Int")]
		public System.Nullable<int> sem
		{
			get
			{
				return this._sem;
			}
			set
			{
				if ((this._sem != value))
				{
					this.OnsemChanging(value);
					this.SendPropertyChanging();
					this._sem = value;
					this.SendPropertyChanged("sem");
					this.OnsemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roll_no", DbType="Int")]
		public System.Nullable<int> roll_no
		{
			get
			{
				return this._roll_no;
			}
			set
			{
				if ((this._roll_no != value))
				{
					this.Onroll_noChanging(value);
					this.SendPropertyChanging();
					this._roll_no = value;
					this.SendPropertyChanged("roll_no");
					this.Onroll_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attempt", DbType="Int")]
		public System.Nullable<int> attempt
		{
			get
			{
				return this._attempt;
			}
			set
			{
				if ((this._attempt != value))
				{
					this.OnattemptChanging(value);
					this.SendPropertyChanging();
					this._attempt = value;
					this.SendPropertyChanged("attempt");
					this.OnattemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_division", DbType="NChar(10)")]
		public string division
		{
			get
			{
				return this._division;
			}
			set
			{
				if ((this._division != value))
				{
					this.OndivisionChanging(value);
					this.SendPropertyChanging();
					this._division = value;
					this.SendPropertyChanged("division");
					this.OndivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batch", DbType="NChar(10)")]
		public string batch
		{
			get
			{
				return this._batch;
			}
			set
			{
				if ((this._batch != value))
				{
					this.OnbatchChanging(value);
					this.SendPropertyChanging();
					this._batch = value;
					this.SendPropertyChanged("batch");
					this.OnbatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_ExternalMark", Storage="_ExternalMarks", ThisKey="sem_id", OtherKey="sem_id")]
		public EntitySet<ExternalMark> ExternalMarks
		{
			get
			{
				return this._ExternalMarks;
			}
			set
			{
				this._ExternalMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_session", Storage="_sessions", ThisKey="sem_id", OtherKey="sem_id")]
		public EntitySet<session> sessions
		{
			get
			{
				return this._sessions;
			}
			set
			{
				this._sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Semester", Storage="_Student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Semesters.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Semesters.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExternalMarks(ExternalMark entity)
		{
			this.SendPropertyChanging();
			entity.Semester = this;
		}
		
		private void detach_ExternalMarks(ExternalMark entity)
		{
			this.SendPropertyChanging();
			entity.Semester = null;
		}
		
		private void attach_sessions(session entity)
		{
			this.SendPropertyChanging();
			entity.Semester = this;
		}
		
		private void detach_sessions(session entity)
		{
			this.SendPropertyChanging();
			entity.Semester = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.session")]
	public partial class session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _session_id;
		
		private System.Nullable<int> _sem_id;
		
		private System.Nullable<char> _session_type;
		
		private System.Nullable<decimal> _attendance;
		
		private System.Nullable<decimal> _est_attendance;
		
		private EntitySet<InternalMark> _InternalMarks;
		
		private EntityRef<Semester> _Semester;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsession_idChanging(int value);
    partial void Onsession_idChanged();
    partial void Onsem_idChanging(System.Nullable<int> value);
    partial void Onsem_idChanged();
    partial void Onsession_typeChanging(System.Nullable<char> value);
    partial void Onsession_typeChanged();
    partial void OnattendanceChanging(System.Nullable<decimal> value);
    partial void OnattendanceChanged();
    partial void Onest_attendanceChanging(System.Nullable<decimal> value);
    partial void Onest_attendanceChanged();
    #endregion
		
		public session()
		{
			this._InternalMarks = new EntitySet<InternalMark>(new Action<InternalMark>(this.attach_InternalMarks), new Action<InternalMark>(this.detach_InternalMarks));
			this._Semester = default(EntityRef<Semester>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem_id", DbType="Int")]
		public System.Nullable<int> sem_id
		{
			get
			{
				return this._sem_id;
			}
			set
			{
				if ((this._sem_id != value))
				{
					if (this._Semester.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsem_idChanging(value);
					this.SendPropertyChanging();
					this._sem_id = value;
					this.SendPropertyChanged("sem_id");
					this.Onsem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_type", DbType="Char(1)")]
		public System.Nullable<char> session_type
		{
			get
			{
				return this._session_type;
			}
			set
			{
				if ((this._session_type != value))
				{
					this.Onsession_typeChanging(value);
					this.SendPropertyChanging();
					this._session_type = value;
					this.SendPropertyChanged("session_type");
					this.Onsession_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendance", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> attendance
		{
			get
			{
				return this._attendance;
			}
			set
			{
				if ((this._attendance != value))
				{
					this.OnattendanceChanging(value);
					this.SendPropertyChanging();
					this._attendance = value;
					this.SendPropertyChanged("attendance");
					this.OnattendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_est_attendance", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> est_attendance
		{
			get
			{
				return this._est_attendance;
			}
			set
			{
				if ((this._est_attendance != value))
				{
					this.Onest_attendanceChanging(value);
					this.SendPropertyChanging();
					this._est_attendance = value;
					this.SendPropertyChanged("est_attendance");
					this.Onest_attendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="session_InternalMark", Storage="_InternalMarks", ThisKey="session_id", OtherKey="session_id")]
		public EntitySet<InternalMark> InternalMarks
		{
			get
			{
				return this._InternalMarks;
			}
			set
			{
				this._InternalMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_session", Storage="_Semester", ThisKey="sem_id", OtherKey="sem_id", IsForeignKey=true)]
		public Semester Semester
		{
			get
			{
				return this._Semester.Entity;
			}
			set
			{
				Semester previousValue = this._Semester.Entity;
				if (((previousValue != value) 
							|| (this._Semester.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Semester.Entity = null;
						previousValue.sessions.Remove(this);
					}
					this._Semester.Entity = value;
					if ((value != null))
					{
						value.sessions.Add(this);
						this._sem_id = value.sem_id;
					}
					else
					{
						this._sem_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Semester");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InternalMarks(InternalMark entity)
		{
			this.SendPropertyChanging();
			entity.session = this;
		}
		
		private void detach_InternalMarks(InternalMark entity)
		{
			this.SendPropertyChanging();
			entity.session = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skipped")]
	public partial class skipped : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _skip_id;
		
		private string _student_id;
		
		private System.Nullable<int> _sem;
		
		private System.Nullable<System.DateTime> _skipdate;
		
		private string _skipped1;
		
		private System.Nullable<char> _type;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onskip_idChanging(int value);
    partial void Onskip_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void OnsemChanging(System.Nullable<int> value);
    partial void OnsemChanged();
    partial void OnskipdateChanging(System.Nullable<System.DateTime> value);
    partial void OnskipdateChanged();
    partial void Onskipped1Changing(string value);
    partial void Onskipped1Changed();
    partial void OntypeChanging(System.Nullable<char> value);
    partial void OntypeChanged();
    #endregion
		
		public skipped()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skip_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int skip_id
		{
			get
			{
				return this._skip_id;
			}
			set
			{
				if ((this._skip_id != value))
				{
					this.Onskip_idChanging(value);
					this.SendPropertyChanging();
					this._skip_id = value;
					this.SendPropertyChanged("skip_id");
					this.Onskip_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10)")]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem", DbType="Int")]
		public System.Nullable<int> sem
		{
			get
			{
				return this._sem;
			}
			set
			{
				if ((this._sem != value))
				{
					this.OnsemChanging(value);
					this.SendPropertyChanging();
					this._sem = value;
					this.SendPropertyChanged("sem");
					this.OnsemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skipdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> skipdate
		{
			get
			{
				return this._skipdate;
			}
			set
			{
				if ((this._skipdate != value))
				{
					this.OnskipdateChanging(value);
					this.SendPropertyChanging();
					this._skipdate = value;
					this.SendPropertyChanged("skipdate");
					this.OnskipdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="skipped", Storage="_skipped1", DbType="VarChar(50)")]
		public string skipped1
		{
			get
			{
				return this._skipped1;
			}
			set
			{
				if ((this._skipped1 != value))
				{
					this.Onskipped1Changing(value);
					this.SendPropertyChanging();
					this._skipped1 = value;
					this.SendPropertyChanged("skipped1");
					this.Onskipped1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Char(1)")]
		public System.Nullable<char> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_skipped", Storage="_Student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.skippeds.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.skippeds.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _student_id;
		
		private string _password;
		
		private string _full_name;
		
		private string _branch;
		
		private System.Nullable<decimal> _batch;
		
		private System.Nullable<int> _current_sem;
		
		private string _seat;
		
		private System.Nullable<decimal> _yoc;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private string _email_id;
		
		private System.Nullable<decimal> _contact_no;
		
		private string _add1;
		
		private string _add2;
		
		private string _city;
		
		private System.Nullable<decimal> _pincode;
		
		private string _state;
		
		private string _country;
		
		private string _sec_ques_1;
		
		private string _sec_ans_1;
		
		private string _sec_ques_2;
		
		private string _sec_ans_2;
		
		private EntitySet<Semester> _Semesters;
		
		private EntitySet<skipped> _skippeds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void OnbatchChanging(System.Nullable<decimal> value);
    partial void OnbatchChanged();
    partial void Oncurrent_semChanging(System.Nullable<int> value);
    partial void Oncurrent_semChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnyocChanging(System.Nullable<decimal> value);
    partial void OnyocChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void Onemail_idChanging(string value);
    partial void Onemail_idChanged();
    partial void Oncontact_noChanging(System.Nullable<decimal> value);
    partial void Oncontact_noChanged();
    partial void Onadd1Changing(string value);
    partial void Onadd1Changed();
    partial void Onadd2Changing(string value);
    partial void Onadd2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpincodeChanging(System.Nullable<decimal> value);
    partial void OnpincodeChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Onsec_ques_1Changing(string value);
    partial void Onsec_ques_1Changed();
    partial void Onsec_ans_1Changing(string value);
    partial void Onsec_ans_1Changed();
    partial void Onsec_ques_2Changing(string value);
    partial void Onsec_ques_2Changed();
    partial void Onsec_ans_2Changing(string value);
    partial void Onsec_ans_2Changed();
    #endregion
		
		public Student()
		{
			this._Semesters = new EntitySet<Semester>(new Action<Semester>(this.attach_Semesters), new Action<Semester>(this.detach_Semesters));
			this._skippeds = new EntitySet<skipped>(new Action<skipped>(this.attach_skippeds), new Action<skipped>(this.detach_skippeds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="VarChar(80)")]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="NChar(2)")]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batch", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> batch
		{
			get
			{
				return this._batch;
			}
			set
			{
				if ((this._batch != value))
				{
					this.OnbatchChanging(value);
					this.SendPropertyChanging();
					this._batch = value;
					this.SendPropertyChanged("batch");
					this.OnbatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_sem", DbType="Int")]
		public System.Nullable<int> current_sem
		{
			get
			{
				return this._current_sem;
			}
			set
			{
				if ((this._current_sem != value))
				{
					this.Oncurrent_semChanging(value);
					this.SendPropertyChanging();
					this._current_sem = value;
					this.SendPropertyChanged("current_sem");
					this.Oncurrent_semChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seat", DbType="NChar(3)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yoc", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> yoc
		{
			get
			{
				return this._yoc;
			}
			set
			{
				if ((this._yoc != value))
				{
					this.OnyocChanging(value);
					this.SendPropertyChanging();
					this._yoc = value;
					this.SendPropertyChanged("yoc");
					this.OnyocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_id", DbType="VarChar(10)")]
		public string email_id
		{
			get
			{
				return this._email_id;
			}
			set
			{
				if ((this._email_id != value))
				{
					this.Onemail_idChanging(value);
					this.SendPropertyChanging();
					this._email_id = value;
					this.SendPropertyChanged("email_id");
					this.Onemail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add1", DbType="VarChar(50)")]
		public string add1
		{
			get
			{
				return this._add1;
			}
			set
			{
				if ((this._add1 != value))
				{
					this.Onadd1Changing(value);
					this.SendPropertyChanging();
					this._add1 = value;
					this.SendPropertyChanged("add1");
					this.Onadd1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add2", DbType="VarChar(50)")]
		public string add2
		{
			get
			{
				return this._add2;
			}
			set
			{
				if ((this._add2 != value))
				{
					this.Onadd2Changing(value);
					this.SendPropertyChanging();
					this._add2 = value;
					this.SendPropertyChanged("add2");
					this.Onadd2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pincode", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> pincode
		{
			get
			{
				return this._pincode;
			}
			set
			{
				if ((this._pincode != value))
				{
					this.OnpincodeChanging(value);
					this.SendPropertyChanging();
					this._pincode = value;
					this.SendPropertyChanged("pincode");
					this.OnpincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(50)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ques_1", DbType="VarChar(100)")]
		public string sec_ques_1
		{
			get
			{
				return this._sec_ques_1;
			}
			set
			{
				if ((this._sec_ques_1 != value))
				{
					this.Onsec_ques_1Changing(value);
					this.SendPropertyChanging();
					this._sec_ques_1 = value;
					this.SendPropertyChanged("sec_ques_1");
					this.Onsec_ques_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ans_1", DbType="VarChar(100)")]
		public string sec_ans_1
		{
			get
			{
				return this._sec_ans_1;
			}
			set
			{
				if ((this._sec_ans_1 != value))
				{
					this.Onsec_ans_1Changing(value);
					this.SendPropertyChanging();
					this._sec_ans_1 = value;
					this.SendPropertyChanged("sec_ans_1");
					this.Onsec_ans_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ques_2", DbType="VarChar(100)")]
		public string sec_ques_2
		{
			get
			{
				return this._sec_ques_2;
			}
			set
			{
				if ((this._sec_ques_2 != value))
				{
					this.Onsec_ques_2Changing(value);
					this.SendPropertyChanging();
					this._sec_ques_2 = value;
					this.SendPropertyChanged("sec_ques_2");
					this.Onsec_ques_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sec_ans_2", DbType="VarChar(100)")]
		public string sec_ans_2
		{
			get
			{
				return this._sec_ans_2;
			}
			set
			{
				if ((this._sec_ans_2 != value))
				{
					this.Onsec_ans_2Changing(value);
					this.SendPropertyChanging();
					this._sec_ans_2 = value;
					this.SendPropertyChanged("sec_ans_2");
					this.Onsec_ans_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Semester", Storage="_Semesters", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<Semester> Semesters
		{
			get
			{
				return this._Semesters;
			}
			set
			{
				this._Semesters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_skipped", Storage="_skippeds", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<skipped> skippeds
		{
			get
			{
				return this._skippeds;
			}
			set
			{
				this._skippeds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Semesters(Semester entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Semesters(Semester entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_skippeds(skipped entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_skippeds(skipped entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.subject")]
	public partial class subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _subject_id;
		
		private string _subject_name;
		
		private string _subject_description;
		
		private System.Nullable<decimal> _subject_credit;
		
		private System.Nullable<int> _allotted_sem;
		
		private string _course;
		
		private EntitySet<ExternalMark> _ExternalMarks;
		
		private EntitySet<InternalMark> _InternalMarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsubject_idChanging(int value);
    partial void Onsubject_idChanged();
    partial void Onsubject_nameChanging(string value);
    partial void Onsubject_nameChanged();
    partial void Onsubject_descriptionChanging(string value);
    partial void Onsubject_descriptionChanged();
    partial void Onsubject_creditChanging(System.Nullable<decimal> value);
    partial void Onsubject_creditChanged();
    partial void Onallotted_semChanging(System.Nullable<int> value);
    partial void Onallotted_semChanged();
    partial void OncourseChanging(string value);
    partial void OncourseChanged();
    #endregion
		
		public subject()
		{
			this._ExternalMarks = new EntitySet<ExternalMark>(new Action<ExternalMark>(this.attach_ExternalMarks), new Action<ExternalMark>(this.detach_ExternalMarks));
			this._InternalMarks = new EntitySet<InternalMark>(new Action<InternalMark>(this.attach_InternalMarks), new Action<InternalMark>(this.detach_InternalMarks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int subject_id
		{
			get
			{
				return this._subject_id;
			}
			set
			{
				if ((this._subject_id != value))
				{
					this.Onsubject_idChanging(value);
					this.SendPropertyChanging();
					this._subject_id = value;
					this.SendPropertyChanged("subject_id");
					this.Onsubject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_name", DbType="VarChar(10)")]
		public string subject_name
		{
			get
			{
				return this._subject_name;
			}
			set
			{
				if ((this._subject_name != value))
				{
					this.Onsubject_nameChanging(value);
					this.SendPropertyChanging();
					this._subject_name = value;
					this.SendPropertyChanged("subject_name");
					this.Onsubject_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_description", DbType="VarChar(50)")]
		public string subject_description
		{
			get
			{
				return this._subject_description;
			}
			set
			{
				if ((this._subject_description != value))
				{
					this.Onsubject_descriptionChanging(value);
					this.SendPropertyChanging();
					this._subject_description = value;
					this.SendPropertyChanged("subject_description");
					this.Onsubject_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_credit", DbType="Decimal(2,1)")]
		public System.Nullable<decimal> subject_credit
		{
			get
			{
				return this._subject_credit;
			}
			set
			{
				if ((this._subject_credit != value))
				{
					this.Onsubject_creditChanging(value);
					this.SendPropertyChanging();
					this._subject_credit = value;
					this.SendPropertyChanged("subject_credit");
					this.Onsubject_creditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allotted_sem", DbType="Int")]
		public System.Nullable<int> allotted_sem
		{
			get
			{
				return this._allotted_sem;
			}
			set
			{
				if ((this._allotted_sem != value))
				{
					this.Onallotted_semChanging(value);
					this.SendPropertyChanging();
					this._allotted_sem = value;
					this.SendPropertyChanged("allotted_sem");
					this.Onallotted_semChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course", DbType="NChar(2)")]
		public string course
		{
			get
			{
				return this._course;
			}
			set
			{
				if ((this._course != value))
				{
					this.OncourseChanging(value);
					this.SendPropertyChanging();
					this._course = value;
					this.SendPropertyChanged("course");
					this.OncourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_ExternalMark", Storage="_ExternalMarks", ThisKey="subject_id", OtherKey="subject_id")]
		public EntitySet<ExternalMark> ExternalMarks
		{
			get
			{
				return this._ExternalMarks;
			}
			set
			{
				this._ExternalMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="subject_InternalMark", Storage="_InternalMarks", ThisKey="subject_id", OtherKey="subject_id")]
		public EntitySet<InternalMark> InternalMarks
		{
			get
			{
				return this._InternalMarks;
			}
			set
			{
				this._InternalMarks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExternalMarks(ExternalMark entity)
		{
			this.SendPropertyChanging();
			entity.subject = this;
		}
		
		private void detach_ExternalMarks(ExternalMark entity)
		{
			this.SendPropertyChanging();
			entity.subject = null;
		}
		
		private void attach_InternalMarks(InternalMark entity)
		{
			this.SendPropertyChanging();
			entity.subject = this;
		}
		
		private void detach_InternalMarks(InternalMark entity)
		{
			this.SendPropertyChanging();
			entity.subject = null;
		}
	}
}
#pragma warning restore 1591
